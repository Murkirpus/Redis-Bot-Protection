<?php
/**
 * Redis Bot Protection - Test Suite
 * –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π —Å–∏—Å—Ç–µ–º—ã
 */

error_reporting(E_ALL);
ini_set('display_errors', 1);

// –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å
require_once __DIR__ . '/inline_check.php';

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
header('Content-Type: text/html; charset=utf-8');

?>
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Redis Bot Protection - Test Suite</title>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            padding: 20px;
            min-height: 100vh;
        }
        .container {
            max-width: 1200px;
            margin: 0 auto;
        }
        .header {
            background: white;
            border-radius: 10px;
            padding: 30px;
            margin-bottom: 20px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
        }
        .header h1 {
            color: #667eea;
            margin-bottom: 10px;
        }
        .header p {
            color: #666;
        }
        .test-section {
            background: white;
            border-radius: 10px;
            padding: 25px;
            margin-bottom: 20px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
        .test-section h2 {
            color: #333;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 2px solid #667eea;
        }
        .test-item {
            padding: 15px;
            margin-bottom: 10px;
            border-radius: 5px;
            background: #f8f9fa;
        }
        .test-item h3 {
            color: #555;
            margin-bottom: 10px;
            font-size: 16px;
        }
        .success {
            background: #d4edda;
            border-left: 4px solid #28a745;
            color: #155724;
        }
        .error {
            background: #f8d7da;
            border-left: 4px solid #dc3545;
            color: #721c24;
        }
        .warning {
            background: #fff3cd;
            border-left: 4px solid #ffc107;
            color: #856404;
        }
        .info {
            background: #d1ecf1;
            border-left: 4px solid #17a2b8;
            color: #0c5460;
        }
        .stat-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin-top: 15px;
        }
        .stat-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 20px;
            border-radius: 8px;
            text-align: center;
        }
        .stat-card .number {
            font-size: 32px;
            font-weight: bold;
            margin-bottom: 5px;
        }
        .stat-card .label {
            font-size: 12px;
            opacity: 0.9;
        }
        .code-block {
            background: #2d2d2d;
            color: #f8f8f2;
            padding: 15px;
            border-radius: 5px;
            overflow-x: auto;
            font-family: 'Courier New', monospace;
            font-size: 13px;
            line-height: 1.5;
        }
        .btn {
            display: inline-block;
            padding: 10px 20px;
            background: #667eea;
            color: white;
            text-decoration: none;
            border-radius: 5px;
            margin-top: 10px;
            transition: background 0.3s;
        }
        .btn:hover {
            background: #5568d3;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 15px;
        }
        th, td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #dee2e6;
        }
        th {
            background: #f8f9fa;
            font-weight: 600;
            color: #495057;
        }
        tr:hover {
            background: #f8f9fa;
        }
        .badge {
            display: inline-block;
            padding: 4px 8px;
            border-radius: 3px;
            font-size: 12px;
            font-weight: 600;
        }
        .badge-success { background: #28a745; color: white; }
        .badge-danger { background: #dc3545; color: white; }
        .badge-warning { background: #ffc107; color: #000; }
        .badge-info { background: #17a2b8; color: white; }
        
        .trust-level-container {
            background: white;
            border-radius: 10px;
            padding: 30px;
            margin-bottom: 20px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
        }
        .trust-level-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }
        .trust-percentage {
            font-size: 48px;
            font-weight: bold;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }
        .trust-label {
            font-size: 18px;
            color: #666;
            margin-top: 5px;
        }
        .progress-bar-container {
            width: 100%;
            height: 40px;
            background: #e9ecef;
            border-radius: 20px;
            overflow: hidden;
            position: relative;
            box-shadow: inset 0 2px 4px rgba(0,0,0,0.1);
        }
        .progress-bar-fill {
            height: 100%;
            background: linear-gradient(90deg, #dc3545 0%, #ffc107 50%, #28a745 100%);
            border-radius: 20px;
            transition: width 0.8s ease;
            display: flex;
            align-items: center;
            justify-content: flex-end;
            padding-right: 15px;
            color: white;
            font-weight: bold;
            font-size: 16px;
        }
        .trust-factors {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 15px;
            margin-top: 25px;
        }
        .trust-factor {
            display: flex;
            align-items: center;
            padding: 15px;
            background: #f8f9fa;
            border-radius: 8px;
            border-left: 4px solid #dee2e6;
        }
        .trust-factor.positive {
            border-left-color: #28a745;
            background: #d4edda;
        }
        .trust-factor.negative {
            border-left-color: #dc3545;
            background: #f8d7da;
        }
        .trust-factor-icon {
            font-size: 24px;
            margin-right: 12px;
        }
        .trust-factor-text {
            flex: 1;
        }
        .trust-factor-value {
            font-weight: bold;
            color: #333;
        }
        .trust-status {
            display: inline-block;
            padding: 8px 16px;
            border-radius: 20px;
            font-weight: 600;
            font-size: 14px;
            margin-top: 10px;
        }
        .trust-status.high { background: #d4edda; color: #155724; }
        .trust-status.medium { background: #fff3cd; color: #856404; }
        .trust-status.low { background: #f8d7da; color: #721c24; }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üõ°Ô∏è Redis Bot Protection - Test Suite</h1>
            <p>–ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∑–∞—â–∏—Ç—ã –æ—Ç –±–æ—Ç–æ–≤</p>
        </div>

<?php

try {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã
    $protection = new RedisBotProtectionNoSessions('127.0.0.1', 6379, null, 0);
    echo '<div class="test-section success">
            <h3>‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Redis —É—Å–ø–µ—à–Ω–æ</h3>
          </div>';
    
    // ========================================
    // –£–†–û–í–ï–ù–¨ –î–û–í–ï–†–ò–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
    // ========================================
    
    // –ü–æ–ª—É—á–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ
    $diagnosis = $protection->diagnoseUserHash();
    $hashInfo = $protection->getUserHashInfo();
    $rateLimitStats = $protection->getRateLimitStats($diagnosis['ip']);
    $blockInfo = $protection->getBlockedIPInfo($diagnosis['ip']);
    
    // –†–∞—Å—á–µ—Ç —É—Ä–æ–≤–Ω—è –¥–æ–≤–µ—Ä–∏—è
    $trustScore = 0;
    $trustFactors = [];
    
    // –§–∞–∫—Ç–æ—Ä 1: –í–∞–ª–∏–¥–Ω–∞—è –∫—É–∫–∞ (20%)
    if (isset($_COOKIE['visitor_verified'])) {
        $cookieData = json_decode($_COOKIE['visitor_verified'], true);
        if ($cookieData && isset($cookieData['hash'], $cookieData['time'])) {
            $trustScore += 20;
            $trustFactors[] = [
                'icon' => 'üç™',
                'text' => '–í–∞–ª–∏–¥–Ω–∞—è –∫—É–∫–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
                'value' => '+20%',
                'positive' => true
            ];
        } else {
            $trustFactors[] = [
                'icon' => '‚ùå',
                'text' => '–ù–µ–≤–∞–ª–∏–¥–Ω–∞—è –∫—É–∫–∞',
                'value' => '0%',
                'positive' => false
            ];
        }
    } else {
        $trustFactors[] = [
            'icon' => '‚ö†Ô∏è',
            'text' => '–ö—É–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
            'value' => '0%',
            'positive' => false
        ];
    }
    
    // –§–∞–∫—Ç–æ—Ä 2: IP –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω (20%)
    if (!$blockInfo['blocked']) {
        $trustScore += 20;
        $trustFactors[] = [
            'icon' => '‚úÖ',
            'text' => 'IP –∞–¥—Ä–µ—Å –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω',
            'value' => '+20%',
            'positive' => true
        ];
    } else {
        $trustFactors[] = [
            'icon' => 'üö´',
            'text' => 'IP –∞–¥—Ä–µ—Å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω',
            'value' => '0%',
            'positive' => false
        ];
    }
    
    // –§–∞–∫—Ç–æ—Ä 3: User Hash –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω (20%)
    if (!$hashInfo['blocked']) {
        $trustScore += 20;
        $trustFactors[] = [
            'icon' => '‚úÖ',
            'text' => 'User Hash –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω',
            'value' => '+20%',
            'positive' => true
        ];
    } else {
        $trustFactors[] = [
            'icon' => 'üö´',
            'text' => 'User Hash –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω',
            'value' => '0%',
            'positive' => false
        ];
    }
    
    // –§–∞–∫—Ç–æ—Ä 4: –ù–æ—Ä–º–∞–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (15%)
    if ($rateLimitStats['current_stats']) {
        $rl = $rateLimitStats['current_stats'];
        $requests1min = $rl['requests_1min'] ?? 0;
        $maxPerMin = 60; // –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        
        if ($requests1min < $maxPerMin * 0.3) {
            $trustScore += 15;
            $trustFactors[] = [
                'icon' => 'üìä',
                'text' => '–ù–æ—Ä–º–∞–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
                'value' => '+15%',
                'positive' => true
            ];
        } elseif ($requests1min < $maxPerMin * 0.7) {
            $trustScore += 8;
            $trustFactors[] = [
                'icon' => '‚ö†Ô∏è',
                'text' => '–ü–æ–≤—ã—à–µ–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
                'value' => '+8%',
                'positive' => false
            ];
        } else {
            $trustFactors[] = [
                'icon' => 'üî•',
                'text' => '–í—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
                'value' => '0%',
                'positive' => false
            ];
        }
    } else {
        $trustScore += 15;
        $trustFactors[] = [
            'icon' => 'üìä',
            'text' => '–ü–µ—Ä–≤—ã–π –≤–∏–∑–∏—Ç / –Ω–∏–∑–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
            'value' => '+15%',
            'positive' => true
        ];
    }
    
    // –§–∞–∫—Ç–æ—Ä 5: –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏–π (15%)
    if ($rateLimitStats['current_stats']) {
        $violations = $rateLimitStats['current_stats']['violations'] ?? 0;
        if ($violations == 0) {
            $trustScore += 15;
            $trustFactors[] = [
                'icon' => '‚úÖ',
                'text' => '–ù–µ—Ç –Ω–∞—Ä—É—à–µ–Ω–∏–π –ª–∏–º–∏—Ç–æ–≤',
                'value' => '+15%',
                'positive' => true
            ];
        } else {
            $trustFactors[] = [
                'icon' => '‚ö†Ô∏è',
                'text' => "–ù–∞—Ä—É—à–µ–Ω–∏–π: $violations",
                'value' => '0%',
                'positive' => false
            ];
        }
    } else {
        $trustScore += 15;
        $trustFactors[] = [
            'icon' => '‚úÖ',
            'text' => '–ù–µ—Ç –Ω–∞—Ä—É—à–µ–Ω–∏–π –ª–∏–º–∏—Ç–æ–≤',
            'value' => '+15%',
            'positive' => true
        ];
    }
    
    // –§–∞–∫—Ç–æ—Ä 6: –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ (10%)
    if (!$diagnosis['extended_tracking']) {
        $trustScore += 10;
        $trustFactors[] = [
            'icon' => 'üëÅÔ∏è',
            'text' => '–†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –Ω–µ –∞–∫—Ç–∏–≤–Ω–æ',
            'value' => '+10%',
            'positive' => true
        ];
    } else {
        $trustFactors[] = [
            'icon' => 'üîç',
            'text' => '–ü–æ–¥ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ–º',
            'value' => '0%',
            'positive' => false
        ];
    }
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –¥–æ–≤–µ—Ä–∏—è
    $trustStatus = '';
    $trustStatusClass = '';
    if ($trustScore >= 80) {
        $trustStatus = '–í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –¥–æ–≤–µ—Ä–∏—è';
        $trustStatusClass = 'high';
    } elseif ($trustScore >= 50) {
        $trustStatus = '–°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å –¥–æ–≤–µ—Ä–∏—è';
        $trustStatusClass = 'medium';
    } else {
        $trustStatus = '–ù–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –¥–æ–≤–µ—Ä–∏—è';
        $trustStatusClass = 'low';
    }
    
    // –í—ã–≤–æ–¥ –±–ª–æ–∫–∞ —Å —É—Ä–æ–≤–Ω–µ–º –¥–æ–≤–µ—Ä–∏—è
    echo '<div class="trust-level-container">
            <div class="trust-level-header">
                <div>
                    <h2 style="color: #333; margin-bottom: 5px;">üõ°Ô∏è –£—Ä–æ–≤–µ–Ω—å –¥–æ–≤–µ—Ä–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</h2>
                    <div class="trust-label">' . htmlspecialchars($diagnosis['ip']) . ' ‚Ä¢ ' . htmlspecialchars($diagnosis['device_type']) . '</div>
                    <span class="trust-status ' . $trustStatusClass . '">' . $trustStatus . '</span>
                </div>
                <div class="trust-percentage">' . $trustScore . '%</div>
            </div>
            
            <div class="progress-bar-container">
                <div class="progress-bar-fill" style="width: ' . $trustScore . '%;">
                    ' . ($trustScore > 10 ? $trustScore . '%' : '') . '
                </div>
            </div>
            
            <div class="trust-factors">';
    
    foreach ($trustFactors as $factor) {
        $factorClass = $factor['positive'] ? 'positive' : 'negative';
        echo '<div class="trust-factor ' . $factorClass . '">
                <div class="trust-factor-icon">' . $factor['icon'] . '</div>
                <div class="trust-factor-text">
                    ' . htmlspecialchars($factor['text']) . '
                </div>
                <div class="trust-factor-value">' . htmlspecialchars($factor['value']) . '</div>
              </div>';
    }
    
    echo '</div></div>';
    
    // ========================================
    // 1. –¢–ï–°–¢ –ë–ê–ó–û–í–û–ô –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–ò
    // ========================================
    echo '<div class="test-section">
            <h2>1. –ë–∞–∑–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å</h2>';
    
    // –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    $diagnosis = $protection->diagnoseUserHash();
    echo '<div class="test-item info">
            <h3>üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ</h3>
            <table>
                <tr><td><strong>IP –∞–¥—Ä–µ—Å:</strong></td><td>' . htmlspecialchars($diagnosis['ip']) . '</td></tr>
                <tr><td><strong>User Hash:</strong></td><td>' . htmlspecialchars($diagnosis['stable_hash']) . '</td></tr>
                <tr><td><strong>–¢–∏–ø —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:</strong></td><td>' . htmlspecialchars($diagnosis['device_type']) . '</td></tr>
                <tr><td><strong>–ë—Ä–∞—É–∑–µ—Ä:</strong></td><td>' . htmlspecialchars($diagnosis['browser']['name'] . ' ' . $diagnosis['browser']['version']) . '</td></tr>
                <tr><td><strong>–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:</strong></td><td>' . htmlspecialchars($diagnosis['browser']['platform']) . '</td></tr>
                <tr><td><strong>–†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ:</strong></td><td>' . ($diagnosis['extended_tracking'] ? '<span class="badge badge-warning">–ê–∫—Ç–∏–≤–Ω–æ</span>' : '<span class="badge badge-success">–ù–µ—Ç</span>') . '</td></tr>
            </table>
          </div>';
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ hash info
    $hashInfo = $protection->getUserHashInfo();
    echo '<div class="test-item ' . ($hashInfo['blocked'] ? 'error' : 'success') . '">
            <h3>üîê –°—Ç–∞—Ç—É—Å User Hash</h3>
            <p><strong>–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω:</strong> ' . ($hashInfo['blocked'] ? '‚ùå –î–ê' : '‚úÖ –ù–ï–¢') . '</p>';
    if ($hashInfo['blocked']) {
        echo '<p><strong>–ü—Ä–∏—á–∏–Ω–∞:</strong> ' . htmlspecialchars($hashInfo['block_data']['blocked_reason'] ?? '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞') . '</p>';
        echo '<p><strong>–í—Ä–µ–º—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:</strong> ' . date('Y-m-d H:i:s', $hashInfo['block_data']['blocked_at'] ?? 0) . '</p>';
    }
    echo '</div>';
    
    echo '</div>';
    
    // ========================================
    // 2. –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê
    // ========================================
    $stats = $protection->getStats();
    echo '<div class="test-section">
            <h2>2. –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã</h2>
            <div class="stat-grid">
                <div class="stat-card">
                    <div class="number">' . $stats['blocked_ips'] . '</div>
                    <div class="label">–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ IP</div>
                </div>
                <div class="stat-card">
                    <div class="number">' . $stats['blocked_user_hashes'] . '</div>
                    <div class="label">–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ Hash</div>
                </div>
                <div class="stat-card">
                    <div class="number">' . $stats['tracking_records'] . '</div>
                    <div class="label">–û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è IP</div>
                </div>
                <div class="stat-card">
                    <div class="number">' . $stats['rate_limit_violations'] . '</div>
                    <div class="label">–ù–∞—Ä—É—à–µ–Ω–∏–π –ª–∏–º–∏—Ç–æ–≤</div>
                </div>
                <div class="stat-card">
                    <div class="number">' . $stats['extended_tracking_active'] . '</div>
                    <div class="label">–†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ</div>
                </div>
                <div class="stat-card">
                    <div class="number">' . $stats['total_keys'] . '</div>
                    <div class="label">–í—Å–µ–≥–æ –∫–ª—é—á–µ–π –≤ Redis</div>
                </div>
            </div>
          </div>';
    
    // ========================================
    // 3. RATE LIMITING
    // ========================================
    echo '<div class="test-section">
            <h2>3. Rate Limiting</h2>';
    
    // –î–∞–Ω–Ω—ã–µ —É–∂–µ –ø–æ–ª—É—á–µ–Ω—ã –≤—ã—à–µ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —É—Ä–æ–≤–Ω—è –¥–æ–≤–µ—Ä–∏—è
    $ip = $diagnosis['ip'];
    
    if ($rateLimitStats['current_stats']) {
        $rl = $rateLimitStats['current_stats'];
        echo '<div class="test-item info">
                <h3>üìä –¢–µ–∫—É—â–∏–µ –ª–∏–º–∏—Ç—ã –¥–ª—è –≤–∞—à–µ–≥–æ IP</h3>
                <table>
                    <tr><td><strong>–ó–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ –º–∏–Ω—É—Ç—É:</strong></td><td>' . ($rl['requests_1min'] ?? 0) . '</td></tr>
                    <tr><td><strong>–ó–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ 5 –º–∏–Ω—É—Ç:</strong></td><td>' . ($rl['requests_5min'] ?? 0) . '</td></tr>
                    <tr><td><strong>–ó–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ —á–∞—Å:</strong></td><td>' . ($rl['requests_1hour'] ?? 0) . '</td></tr>
                    <tr><td><strong>–ù–∞—Ä—É—à–µ–Ω–∏–π:</strong></td><td>' . ($rl['violations'] ?? 0) . '</td></tr>
                    <tr><td><strong>–ü–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–ø—Ä–æ—Å:</strong></td><td>' . date('Y-m-d H:i:s', $rl['last_request'] ?? 0) . '</td></tr>
                </table>
              </div>';
    } else {
        echo '<div class="test-item success">
                <h3>‚úÖ Rate Limiting</h3>
                <p>–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –¥–ª—è –≤–∞—à–µ–≥–æ IP</p>
              </div>';
    }
    
    // –¢–æ–ø –Ω–∞—Ä—É—à–∏—Ç–µ–ª–µ–π
    $violators = $protection->getTopRateLimitViolators(5);
    if (!empty($violators)) {
        echo '<div class="test-item warning">
                <h3>‚ö†Ô∏è –¢–æ–ø-5 –Ω–∞—Ä—É—à–∏—Ç–µ–ª–µ–π Rate Limit</h3>
                <table>
                    <thead>
                        <tr>
                            <th>–ù–∞—Ä—É—à–µ–Ω–∏–π</th>
                            <th>1 –º–∏–Ω</th>
                            <th>5 –º–∏–Ω</th>
                            <th>1 —á–∞—Å</th>
                            <th>–ü–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–ø—Ä–æ—Å</th>
                        </tr>
                    </thead>
                    <tbody>';
        foreach ($violators as $v) {
            echo '<tr>
                    <td><span class="badge badge-danger">' . $v['violations'] . '</span></td>
                    <td>' . $v['requests_1min'] . '</td>
                    <td>' . $v['requests_5min'] . '</td>
                    <td>' . $v['requests_1hour'] . '</td>
                    <td>' . $v['last_request'] . '</td>
                  </tr>';
        }
        echo '</tbody></table></div>';
    }
    
    echo '</div>';
    
    // ========================================
    // 4. –ù–ê–°–¢–†–û–ô–ö–ò –°–ò–°–¢–ï–ú–´
    // ========================================
    echo '<div class="test-section">
            <h2>4. –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</h2>';
    
    $rateLimitSettings = $protection->getRateLimitSettings();
    echo '<div class="test-item info">
            <h3>‚öôÔ∏è Rate Limit Settings</h3>
            <table>
                <tr><td><strong>–ú–∞–∫—Å. –∑–∞–ø—Ä–æ—Å–æ–≤/–º–∏–Ω—É—Ç–∞:</strong></td><td>' . $rateLimitSettings['max_requests_per_minute'] . '</td></tr>
                <tr><td><strong>–ú–∞–∫—Å. –∑–∞–ø—Ä–æ—Å–æ–≤/5–º–∏–Ω:</strong></td><td>' . $rateLimitSettings['max_requests_per_5min'] . '</td></tr>
                <tr><td><strong>–ú–∞–∫—Å. –∑–∞–ø—Ä–æ—Å–æ–≤/—á–∞—Å:</strong></td><td>' . $rateLimitSettings['max_requests_per_hour'] . '</td></tr>
                <tr><td><strong>–ü–æ—Ä–æ–≥ –≤—Å–ø–ª–µ—Å–∫–∞:</strong></td><td>' . $rateLimitSettings['burst_threshold'] . ' –∑–∞ ' . $rateLimitSettings['burst_window'] . ' —Å–µ–∫</td></tr>
                <tr><td><strong>–°–º–µ–Ω–∞ UA (–ø–æ—Ä–æ–≥):</strong></td><td>' . $rateLimitSettings['ua_change_threshold'] . ' –∑–∞ ' . $rateLimitSettings['ua_change_time_window'] . ' —Å–µ–∫</td></tr>
            </table>
          </div>';
    
    $slowBotSettings = $protection->getSlowBotSettings();
    echo '<div class="test-item info">
            <h3>üêå Slow Bot Settings</h3>
            <table>
                <tr><td><strong>–ú–∏–Ω. –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:</strong></td><td>' . $slowBotSettings['min_requests_for_analysis'] . '</td></tr>
                <tr><td><strong>–î–ª–∏–Ω–Ω–∞—è —Å–µ—Å—Å–∏—è (—á–∞—Å—ã):</strong></td><td>' . $slowBotSettings['long_session_hours'] . '</td></tr>
                <tr><td><strong>–ú–∏–Ω. –∑–∞–ø—Ä–æ—Å–æ–≤ slow bot:</strong></td><td>' . $slowBotSettings['slow_bot_min_requests'] . '</td></tr>
            </table>
          </div>';
    
    echo '</div>';
    
    // ========================================
    // 5. –¢–ï–°–¢ RDNS
    // ========================================
    echo '<div class="test-section">
            <h2>5. –¢–µ—Å—Ç –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–∏—Å–∫–æ–≤–∏–∫–æ–≤ (rDNS)</h2>
            <div class="test-item info">
                <h3>üîç –ü—Ä–∏–º–µ—Ä—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –ø–æ–∏—Å–∫–æ–≤–∏–∫–æ–≤</h3>
                <p>–†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å—Ç—Ä–æ–∫–∏ –≤ –∫–æ–¥–µ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ rDNS</p>
                <div class="code-block">// Googlebot
$protection->testRDNS(\'66.249.66.1\', \'Mozilla/5.0 (compatible; Googlebot/2.1)\');

// Bingbot
$protection->testRDNS(\'40.77.167.181\', \'Mozilla/5.0 (compatible; bingbot/2.0)\');

// Fake bot
$protection->testRDNS(\'1.2.3.4\', \'Mozilla/5.0 (compatible; Googlebot/2.1)\');</div>
            </div>
          </div>';
    
    // ========================================
    // 6. –ü–†–ò–ú–ï–†–´ –£–ü–†–ê–í–õ–ï–ù–ò–Ø
    // ========================================
    echo '<div class="test-section">
            <h2>6. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏</h2>
            <div class="test-item info">
                <h3>üõ†Ô∏è –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</h3>
                <div class="code-block">// –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å IP
$protection->unblockIP(\'1.2.3.4\');
$protection->resetRateLimit(\'1.2.3.4\');

// –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
$protection->unblockUserHash();

// –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ
$info = $protection->getBlockedIPInfo(\'1.2.3.4\');
print_r($info);

// –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
$cleaned = $protection->cleanup(true);
$deepCleaned = $protection->deepCleanup();

// –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
$protection->updateRateLimitSettings([
    \'max_requests_per_minute\' => 120,
    \'burst_threshold\' => 30
]);</div>
            </div>
          </div>';
    
    // ========================================
    // 7. –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò
    // ========================================
    echo '<div class="test-section">
            <h2>7. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h2>';
    
    if ($stats['rate_limit_violations'] > 50) {
        echo '<div class="test-item warning">
                <h3>‚ö†Ô∏è –í—ã—Å–æ–∫–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞—Ä—É—à–µ–Ω–∏–π –ª–∏–º–∏—Ç–æ–≤</h3>
                <p>–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ ' . $stats['rate_limit_violations'] . ' –Ω–∞—Ä—É—à–µ–Ω–∏–π. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è:</p>
                <ul>
                    <li>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –∞—Ç–∞–∫</li>
                    <li>–í–æ–∑–º–æ–∂–Ω–æ, —É–≤–µ–ª–∏—á–∏—Ç—å –ª–∏–º–∏—Ç—ã –¥–ª—è –ª–µ–≥–∏—Ç–∏–º–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</li>
                    <li>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–æ–ø –Ω–∞—Ä—É—à–∏—Ç–µ–ª–µ–π –≤—ã—à–µ</li>
                </ul>
              </div>';
    }
    
    if ($stats['blocked_ips'] > 20) {
        echo '<div class="test-item warning">
                <h3>‚ö†Ô∏è –ë–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö IP</h3>
                <p>–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ ' . $stats['blocked_ips'] . ' IP –∞–¥—Ä–µ—Å–æ–≤. –≠—Ç–æ –º–æ–∂–µ—Ç —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞:</p>
                <ul>
                    <li>–ê–∫—Ç–∏–≤–Ω—É—é –∞—Ç–∞–∫—É –±–æ—Ç–æ–≤</li>
                    <li>–°–ª–∏—à–∫–æ–º —Å—Ç—Ä–æ–≥–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</li>
                    <li>–ù–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –∞–Ω–∞–ª–∏–∑–∞ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫</li>
                </ul>
              </div>';
    }
    
    if ($stats['blocked_ips'] == 0 && $stats['rate_limit_violations'] == 0) {
        echo '<div class="test-item success">
                <h3>‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ</h3>
                <p>–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –∏ –Ω–∞—Ä—É—à–µ–Ω–∏–π. –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∑–∞—â–∏—Ç–µ.</p>
              </div>';
    }
    
    echo '</div>';
    
} catch (Exception $e) {
    echo '<div class="test-section error">
            <h3>‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏</h3>
            <p><strong>–°–æ–æ–±—â–µ–Ω–∏–µ:</strong> ' . htmlspecialchars($e->getMessage()) . '</p>
            <p><strong>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:</strong></p>
            <ul>
                <li>–ó–∞–ø—É—â–µ–Ω –ª–∏ Redis —Å–µ—Ä–≤–µ—Ä (redis-cli ping)</li>
                <li>–ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è</li>
                <li>–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Redis –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –∞–¥—Ä–µ—Å—É –∏ –ø–æ—Ä—Ç—É</li>
            </ul>
          </div>';
}

?>

        <div class="header" style="text-align: center; margin-top: 20px;">
            <p>–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ ‚Ä¢ <?php echo date('Y-m-d H:i:s'); ?></p>
            <a href="?" class="btn">üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Ç–µ—Å—Ç</a>
        </div>
    </div>
</body>
</html>
